version: '3.3'

networks:
  backend:
  frontend:

services:
  mysql:
    container_name: ${APP_NAME}_mysql
    build:
      context: ./docker/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
        - TZ=${APP_TIMEZONE}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./docker/mysql/storage:/var/lib/mysql
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - backend

  php:
    container_name: ${APP_NAME}_php
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
      args:
        - APP_NAME=${APP_NAME}
        - APP_FRAMEWORK=${APP_FRAMEWORK}
        - VERSION=${PHP_VERSION}
        - PUID=${PHP_PUID}
        - PGID=${PHP_PGID}
    volumes:
      - ./src/:/var/www/${APP_NAME}/
    depends_on:
      - mysql
    networks:
      - backend

  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: ${APP_NAME}_nginx
    environment:
      - APP_NAME=${APP_NAME}
    volumes:
      - ./src/:/var/www/${APP_NAME}/
      - ./docker/nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
    command: [
      "/bin/bash",
      "-c",
      "export APP_NAME && envsubst '$$APP_NAME' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ]
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - mysql
      - php
    networks:
      - frontend
      - backend
